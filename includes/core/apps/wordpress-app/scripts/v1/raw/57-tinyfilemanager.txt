#!/usr/bin/env bash

if [[ "$EUID" -ne 0 ]]
then
	echo "Sorry, you need to run this as root"
	exit
fi

## Get our common functions
if [[ ! -f 9999-common-functions.sh ]]
then
	echo "The file 9999-common-functions.sh is missing"
	exit 1
fi
source 9999-common-functions.sh


# https://github.com/prasathmani/tinyfilemanager/wiki#configuration

function update_tiny_file_manager_admin_pass(){
    local domain
    local admin_pass
    local admin_user
    local default_admin_username
    local username
    domain="$1"
    username=$(echo "$domain" | cut -c1-32)
    admin_pass="$2"
    default_admin_username='admin'
    admin_user="${3:-$default_admin_username}" # optional param so we can selectively change admin username from default 'admin' but only if provided
	
	# be very careful if reformatting the below all preceding whitespace has to be tab's only or it won't work....
	# Reference: https://riptutorial.com/bash/example/2135/indenting-here-documents
	# Setup Singlesigon needed stuff in config
	tinyfilemanager_config="/var/www/$domain/html/filemanager/config.php"
	cat >> "${tinyfilemanager_config}" <<-'EOL'
	<?php

	/*
	#################################################################################################################
	This is an OPTIONAL configuration file. rename this file into config.php to use this configuration 
	The role of this file is to make updating of "tinyfilemanager.php" easier.
	So you can:
	-Feel free to remove completely this file and configure "tinyfilemanager.php" as a single file application.
	or
	-Put inside this file all the static configuration you want and forgot to configure "tinyfilemanager.php".
	#################################################################################################################
	*/

	//Application Title
	define('APP_TITLE', 'FileManager');

	// Auth with login/password
	// set true/false to enable/disable it
	// Is independent from IP white- and blacklisting
	$use_auth = true;

	// Login user name and password
	// Users: array('Username' => 'Password', 'Username2' => 'Password2', ...)
	// Generate secure password hash - https://tinyfilemanager.github.io/docs/pwd.html
	$auth_users = array(
	//     'admin' => '$2y$10$/K.hjNr84lLNDt8fTXjoI.DBp6PpeyoJ.mGwrrLuCZfAwfSAGqhOW', //admin@123
	//     'user' => '$2y$10$Fg6Dz8oH9fPoZ2jJan5tZuv6Z4Kp7avtQ9bDfrdRntXtPeiMAZyGO' //12345
	// Insert user and pass below this line.
	//'admin' => 'ADMIN_HASHED_PASSWORD',
	//'user' => 'USER_HASHED_PASSWORD',
	//'admin' => password_hash('ADMIN_PASSWORD', PASSWORD_DEFAULT),
	//'user' => password_hash('USER_PASSWORD', PASSWORD_DEFAULT),
	// For replacing via scripted setups
	'ADMIN_USERNAME' => 'ADMIN_HASHED_PASSWORD',

	
	// Insert user and pass above this line.
	);

	// Readonly users
	// e.g. array('users', 'guest', ...)
	$readonly_users = array(
		'user'
	);

	// Enable highlight.js (https://highlightjs.org/) on view's page
	$use_highlightjs = true;

	// highlight.js style
	// for dark theme use 'ir-black'
	$highlightjs_style = 'ir-black';

	// Set light or dark theme
	//$theme = 'light';
	//define('FM_THEME', $theme);

	// Enable ace.js (https://ace.c9.io/) on view's page
	$edit_files = true;

	// Default timezone for date() and time()
	// Doc - http://php.net/manual/en/timezones.php
	$default_timezone = 'Etc/UTC'; // UTC

	// Root path for file manager
	// use absolute path of directory i.e: '/var/www/folder' or $_SERVER['DOCUMENT_ROOT'].'/folder'
	// $root_path = $_SERVER['DOCUMENT_ROOT'];

	// Set's this to parent directory /var/www/domain/html instead of /var/www/domain/html/filemanager
	$root_path = dirname(__FILE__, 2); 

	// Root url for links in file manager.Relative to $http_host. Variants: '', 'path/to/subfolder'
	// Will not working if $root_path will be outside of server document root
	$root_url = '';

	// Server hostname. Can set manually if wrong
	$http_host = $_SERVER['HTTP_HOST'];

	// user specific directories
	// https://github.com/prasathmani/tinyfilemanager/wiki/Security-and-User-Management#user-specific-directories
	// array('Username' => 'Directory path', 'Username2' => 'Directory path', ...)
	$directories_users = array(
	'ADMIN_USERNAME' => $root_path, // restricts user to their own /var/www/domain/html 
	);

	// input encoding for iconv
	$iconv_input_encoding = 'UTF-8';

	// date() format for file modification date
	// Doc - https://www.php.net/manual/en/datetime.format.php
	$datetime_format = 'd.m.y H:i:s';

	// Allowed file extensions for create and rename files
	// e.g. 'txt,html,css,js'
	$allowed_file_extensions = '';

	// Allowed file extensions for upload files
	// e.g. 'gif,png,jpg,html,txt'
	$allowed_upload_extensions = '';

	// Favicon path. This can be either a full url to an .PNG image, or a path based on the document root.
	// full path, e.g http://example.com/favicon.png
	// local path, e.g images/icons/favicon.png
	// $favicon_path = 'http://example.com/favicon.png';

	// Files and folders to excluded from listing
	// https://github.com/prasathmani/tinyfilemanager/wiki/Exclude-Files-&-Folders
	// e.g. array('myfile.html', 'personal-folder', '*.php', ...)
	$exclude_items = array(
		'phpMyAdmin',
		'filemanager',
		'filemanager/index.php',
		'filemanager/config.php',
	);

	// Online office Docs Viewer
	// Availabe rules are 'google', 'microsoft' or false
	// google => View documents using Google Docs Viewer
	// microsoft => View documents using Microsoft Web Apps Viewer
	// false => disable online doc viewer
	$online_viewer = 'google';

	// Sticky Nav bar
	// true => enable sticky header
	// false => disable sticky header
	$sticky_navbar = true;


	// max upload file size
	$max_upload_size_bytes = 50000000;

	// https://github.com/prasathmani/tinyfilemanager/wiki/IP-Blacklist-and-Whitelist
	// Possible rules are 'OFF', 'AND' or 'OR'
	// OFF => Don't check connection IP, defaults to OFF
	// AND => Connection must be on the whitelist, and not on the blacklist
	// OR => Connection must be on the whitelist, or not on the blacklist
	$ip_ruleset = 'OFF';

	// Should users be notified of their block?
	$ip_silent = true;

	// IP-addresses, both ipv4 and ipv6
	$ip_whitelist = array(
		'127.0.0.1',    // local ipv4
		'::1'           // local ipv6
	);

	// IP-addresses, both ipv4 and ipv6
	$ip_blacklist = array(
		'0.0.0.0',      // non-routable meta ipv4
		'::'            // non-routable meta ipv6
	);

	// Show or hide files and folders that starts with a dot
	$show_hidden = true;
	define('FM_SHOW_HIDDEN', $show_hidden);

	// Show directory size: true or speedup output: false
	$calc_folder = true;


	// commented it out so it doesn't add this to output at top of the file like it would do otherwise
	//?> 
	EOL
	
    # See this: https://tinyfilemanager.github.io/docs/pwd.html
    filemanager_password_hashed=$(echo "<?php
    \$password = '$admin_pass';
    \$hash_password = password_hash(\$password, PASSWORD_DEFAULT);
    echo \$hash_password;
    ?>" | php)

    # Update config placeholder admin password with new hashed password.
    sed -i -e "s|ADMIN_USERNAME|$admin_user|g" -e "s|ADMIN_HASHED_PASSWORD|$filemanager_password_hashed|g" "${tinyfilemanager_config}"
    chown "${username}":www-data "${tinyfilemanager_config}"

}

function download_tiny_file_manager(){
    local domain
    domain="$1"
    mkdir -p /var/www/"$domain"/html/filemanager/
    # Overwrite main files only
    wget -O /var/www/"$domain"/html/filemanager/index.php https://raw.githubusercontent.com/prasathmani/tinyfilemanager/master/tinyfilemanager.php
    wget -O /var/www/"$domain"/html/filemanager/translation.json https://raw.githubusercontent.com/prasathmani/tinyfilemanager/master/translation.json
    # Can add this back if desired.
	# Change name to something whitelable in hardcoded places
    #sed -i 's|Tiny File Manager|FileManager|g' /var/www/$domain/html/filemanager/index.php
}

function upgrade_tiny_file_manager(){
    local domain
    local username
    domain="$1"
    username=$(echo "$domain" | cut -c1-32)
    download_tiny_file_manager "$domain"
    chown -R "${username}":www-data /var/www/"$domain"/html/filemanager
    gf_restart_webserver
}

function install_tiny_file_manager(){
    # Install Tiny File Manager: https://github.com/prasathmani/tinyfilemanager
    local domain
    local admin_user
    local admin_pass
    local username
    domain="$1"
	admin_user="$2"
	admin_pass="$3"
    echo "Filemanager installation for $domain starting..."
    download_tiny_file_manager "$domain"
    update_tiny_file_manager_admin_pass "$domain" "$admin_pass" "$admin_user"
    username=$(echo "$domain" | cut -c1-32)
	chown -R "${username}":www-data /var/www/"$domain"/html/filemanager
}

function uninstall_tiny_file_manager(){
    local domain
    domain="$1"
    rm -rf /var/www/"$domain"/html/filemanager
}

function get_auth_credentials(){
	if [[ -z $user ]]; then
        echo
        echo "Specify a new user name
Example: mynewusername"
        read -p "User name: " user
    fi

    if [[ -z $pass ]]; then
        echo
        echo "Specify a new password"
        read -p "Password: " pass
    fi
}

while [[ -z $domain ]]
do
	clear
	echo "Please, select which site you want to work with"
	gf_select_domain
	domain=$(ls /var/www | grep -v html | sed -n "$domain_number"p)
done


while [[ -z $action ]]
do
	echo
	echo "What do you want to do?"
	echo
	echo "   1) Install TinyFileManager"
	echo "   2) Remove TinyFileManager"
	echo "   3) Upgrade TinyFileManager to the latest version"
	echo "   4) Change username and password"
	read -p "Action: " action
	until [[ -z "$action" || "$action" =~ ^[1-4]$ ]]
	do
		echo "$action: invalid selection."
		read -p "Action: " action
	done
done

user_name=$(echo "$domain" | cut -c1-32)

if [[ $action == "install_tinyfilemanager" || $action == "1" ]]; then
	get_auth_credentials
    install_tiny_file_manager "$domain" "$user" "$pass"
    gf_restart_webserver
    echo
    echo "Filemanager installed for $domain"
    echo
    echo "Login credentials are:"
    echo "User: $user"
    echo "Password: $pass"
    echo "You can access FileManager at: http://$domain/filemanager or https://$domain/filemanager if ssl is enabled"
fi

if [[ $action == "remove_tinyfilemanager" || $action == "2" ]]; then
    uninstall_tiny_file_manager "$domain"
    gf_restart_webserver
    echo
    echo "FileManager has been removed for $domain"

fi

if [[ $action == "upgrade_tinyfilemanager" || $action == "3" ]]; then
    upgrade_tiny_file_manager "$domain"
    # get filemanager version
    # Looking for this line at top: define('VERSION', '2.4.6');
    filemanager_version=$(grep VERSION /var/www/"$domain"/html/filemanager/index.php | grep -oE "[[:digit:]]+.[[:digit:]]+.[[:digit:]]+"| head -n1)
    gf_restart_webserver
    echo
    echo "FileManager updated for $domain to version $filemanager_version"
    echo
fi



if [[ $action == "change_auth_tinyfilemanager" || $action == "4" ]]; then
	get_auth_credentials
    update_tiny_file_manager_admin_pass "$domain" "$pass" "$user"
    gf_restart_webserver
    echo
    echo "Access credentials have been updated"
    echo
    echo "Login credentials are:"
    echo "User: $user"
    echo "Password: $pass"
    echo "You can access FileManager at: http://$domain/filemanager or https://$domain/filemanager if ssl is enabled"
fi
