#!/bin/bash
if [[ "$EUID" -ne 0 ]]
then
	echo "Sorry, you need to run this as root"
	exit
fi

## Get our common functions
if [[ ! -f 9999-common-functions.sh ]]
then
	echo "The file 9999-common-functions.sh is missing"
	exit 1
fi
source 9999-common-functions.sh

while [[ -z $domain ]]
do
	clear
	echo "Please, select which site you want to work with"
	gf_select_domain
	domain=$(ls /var/www | grep -v html | sed -n "$site_number"p)
done


while [[ -z $action ]]
do
	echo
	echo "What do you want to do?"
	echo
	echo "   1) Install phpMyAdmin"
	echo "   2) Update phpMyAdmin to the latest version"
	echo "   3) Change username and password"
	echo "   4) Remove phpMyAdmin"
	echo "   5) Enable IP address restrictions"
	echo "   6) Disable IP address restrictions"
	echo "   7) Add IP address to the whitelist"
	echo "   8) Remove IP address from the whitelist"
	echo "   9) Print username and password"
	read -p "Action: " action
	until [[ -z "$action" || "$action" =~ ^[1-9]$ ]]
	do
		echo "$action: invalid selection."
		read -p "Action: " action
	done
done


user_name=$(echo $domain | cut -c1-32)

if [[ $action == "install_phpmyadmin" || $action == "1" ]]
then
	wget https://files.phpmyadmin.net/phpMyAdmin/5.2.0/phpMyAdmin-5.2.0-all-languages.tar.gz
	tar xzf phpMyAdmin-5.2.0-all-languages.tar.gz
	cp phpMyAdmin-5.2.0-all-languages/config.sample.inc.php phpMyAdmin-5.2.0-all-languages/config.inc.php
	sed -i '/blowfish_secret/d' phpMyAdmin-5.2.0-all-languages/config.inc.php
	echo "\$cfg['blowfish_secret'] = '$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 32)';" >> phpMyAdmin-5.2.0-all-languages/config.inc.php
	mkdir -p /var/www/$domain/html/phpMyAdmin
	mv phpMyAdmin-5.2.0-all-languages/* /var/www/$domain/html/phpMyAdmin
	rm -rf phpMyAdmin-5.2.0-all-languages.tar.gz phpMyAdmin-5.2.0-all-languages
	mkdir /var/www/$domain/html/phpMyAdmin/tmp
	chmod 775 /var/www/$domain/html/phpMyAdmin/tmp
	chown -R $user_name:www-data /var/www/$domain/html/phpMyAdmin

	gf_get_dbhost $domain
	gf_get_dbname $domain
	gf_get_dbuser $domain
	gf_get_dbpass $domain

	sed -i "s/localhost/$g_mysql_host/g" /var/www/$domain/html/phpMyAdmin/config.inc.php

	echo
	echo "phpMyAdmin installed for $domain"
	echo
	echo "Login credentials are:"
	echo "Host: $g_mysql_host"
	echo "Database: $g_mysql_name"
	echo "User: $g_mysql_user"
	echo "Password: $g_mysql_pass"
	
	echo "You can access phpMyAdmin at: $domain/phpMyAdmin"
fi


if [[ $action == "update_phpmyadmin" || $action == "2" ]]
then
	wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.gz
	tar xzf phpMyAdmin-*-all-languages.tar.gz
	phpmyadmin_version=$(find -maxdepth 1 -type d -name "phpMyAdmin-*-all-languages" | cut -d "-" -f 2)
	cp phpMyAdmin-$phpmyadmin_version-all-languages/config.sample.inc.php phpMyAdmin-$phpmyadmin_version-all-languages/config.inc.php
	sed -i '/blowfish_secret/d' phpMyAdmin-$phpmyadmin_version-all-languages/config.inc.php
	echo "\$cfg['blowfish_secret'] = '$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 32)';" >> phpMyAdmin-$phpmyadmin_version-all-languages/config.inc.php
	
	# Before attempting to remove the site from the www folder, make sure we have a value in the $domain var.
	# This prevents us from accidentally deleting the entire www folder when attempting to delete the domain folder.
	if [[ -z $domain ]]
	then
		echo "Unable to fully remove the phpMyAdmin domain: $domain."
		exit 1
	else 
		rm -rf /var/www/$domain/html/phpMyAdmin
	fi	

	mkdir -p /var/www/$domain/html/phpMyAdmin
	mv phpMyAdmin-$phpmyadmin_version-all-languages/* /var/www/$domain/html/phpMyAdmin
	rm -rf phpMyAdmin-$phpmyadmin_version-all-languages.tar.gz phpMyAdmin-$phpmyadmin_version-all-languages
	mkdir /var/www/$domain/html/phpMyAdmin/tmp
	chmod 775 /var/www/$domain/html/phpMyAdmin/tmp
	chown -R $user_name:www-data /var/www/$domain/html/phpMyAdmin
	
	gf_get_dbhost $domain
	gf_get_dbname $domain
	gf_get_dbuser $domain
	gf_get_dbpass $domain	

	sed -i "s/localhost/$g_mysql_host/g" /var/www/$domain/html/phpMyAdmin/config.inc.php
	
	echo
	echo "phpMyAdmin updated for $domain to version $phpmyadmin_version"
	echo
	echo "Login credentials are:"
	echo "Host: $g_mysql_host"
	echo "Database: $g_mysql_name"
	echo "User: $g_mysql_user"
	echo "Password: $g_mysql_pass"
	echo "You can access phpMyAdmin at: $domain/phpMyAdmin"
fi


if [[ $action == "change_auth_phpmyadmin" || $action == "3" ]]
then
	if [[ -z $mysql_user ]]
	then
		echo
		echo "Specify a new user name Example: mynewusername"
		read -p "User name: " mysql_user
	fi

	if [[ -z $mysql_pass ]]
	then
		echo
		echo "Specify a new password"
		read -p "Password: " mysql_pass
	fi

	mysql_db=$(grep DB_NAME /var/www/$domain/html/wp-config.php | tr -d "[:space:]"|cut -d ',' -f2|cut -d')' -f1|tail -c +2 | head -c -2)
	mysql_old_user=$(grep DB_USER /var/www/$domain/html/wp-config.php | tr -d "[:space:]"|cut -d ',' -f2|cut -d')' -f1|tail -c +2 | head -c -2)
	gf_get_dbhost $domain
	gf_get_dbname $domain
	gf_get_dbuser $domain
	gf_get_dbpass $domain
	gf_get_dbport $domain

	# Rename MySQL user and change pass
	mysql -h $g_mysql_host_noport -P $g_mysql_dbport -u $mysql_old_user -p"$g_mysql_pass" <<QUERY
RENAME USER '$mysql_old_user' TO '$mysql_user';
SET PASSWORD FOR '$mysql_user' = PASSWORD('$mysql_pass');
FLUSH PRIVILEGES;
QUERY

	# Update WP config
	su - $user_name -c "wp --skip-plugins config set DB_USER $mysql_user"
	su - $user_name -c "wp --skip-plugins config set DB_PASSWORD $mysql_password"
	su - $user_name -c "wp cache flush"

	gf_get_dbhost $domain
	gf_get_dbname $domain
	gf_get_dbuser $domain
	gf_get_dbpass $domain

	echo
	echo "Access credentials have been updated"
	echo
	echo "Login credentials are:"
	echo "Host: $g_mysql_host"
	echo "Database: $g_mysql_name"
	echo "User: $g_mysql_user"
	echo "Password: $g_mysql_pass"
	echo "You can access phpMyAdmin at: $domain/phpMyAdmin"
fi


if [[ $action == "remove_phpmyadmin" || $action == "4" ]]
then

	# Before attempting to remove the site from the www folder, make sure we have a value in the $domain var.
	# This prevents us from accidentally deleting the entire www folder when attempting to delete the domain folder.
	if [[ -z $domain ]]
	then
		echo "Unable to fully remove the phpMyAdmin domain: $domain."
		exit 1
	else 
		rm -rf /var/www/$domain/html/phpMyAdmin
	fi	

	echo
	echo "phpMyAdmin has been removed for $domain"
fi


if [[ $action == "enable_phpmyadmin_whitelist" || $action == "5" ]]
then
	if [ "$g_webserver_type" = "nginx" ]
	then
		sed -i "/allow all;/c\deny all;" /etc/nginx/sites-enabled/$domain
	elif [ "$g_webserver_type" = "ols" ]  || [ "$g_webserver_type" = "ols-enterprise" ]
	then
		echo 'RewriteRule ^phpMyAdmin/.*$ - [R=403,NC,L]' >> /var/www/$domain/html/.htaccess
	fi

	gf_restart_webserver
	echo
	echo "phpMyAdmin access restrictions enabled for $domain"
	exit
fi


if [[ $action == "disable_phpmyadmin_whitelist" || $action == "6" ]]
then
	if [ "$g_webserver_type" = "nginx" ]
	then
		sed -i "/deny all;/c\allow all;" /etc/nginx/sites-enabled/$domain
	elif [ "$g_webserver_type" = "ols" ]  || [ "$g_webserver_type" = "ols-enterprise" ]
	then
		# Remove Rewrite rule to do redirect to Rickroll youtube link.
		sed -i '/RewriteRule ^phpMyAdmin/d' /var/www/$domain/html/.htaccess
	fi

	gf_restart_webserver
	echo
	echo "phpMyAdmin access restrictions disabled for $domain"
	exit
fi


if [[ $action == "add_whitelisted_ip" || $action == "7" ]]
then
	if [[ -z $whitelistip ]]
	then
		echo "Specify the IP address which you wish to add"
		echo "Example: 12.34.56.78"
		read -p "IP address: " whitelistip
	fi
	if [ "$g_webserver_type" = "nginx" ]
	then
		sed -i "/location ~ \/phpMyAdmin/a allow $whitelistip;" /etc/nginx/sites-enabled/$domain
	elif [ "$g_webserver_type" = "ols" ]  || [ "$g_webserver_type" = "ols-enterprise" ]
	then
		ip_rewrite_allow=$(echo "RewriteCond %{REMOTE_ADDR}" '!'"${whitelistip}"|sed 's|\.|\\\.|g')
		# We need to only insert this right before the matching phpmyadmin redirect
		sed -i "/RewriteRule \^phpMyAdmin.*/i $(printf %q "$ip_rewrite_allow")"  /var/www/$domain/html/.htaccess
	fi
	gf_restart_webserver

	echo
	echo "$whitelistip added to the phpMyAdmin whitelist for $domain"
	exit
fi


if [[ $action == "remove_whitelisted_ip" || $action == "8" ]]
then
	if [ "$g_webserver_type" = "nginx" ]
	then
		while [[ -z $whitelistip ]]
		do
			echo "Specify the IP address which you wish to remove"
			sed -n '/location ~ \/phpMyAdmin/,/ all;/p' /etc/nginx/sites-enabled/$domain | sed '1d;$d' | sed 's/allow //g' | sed 's/;//g' | nl
			read -p "IP address: " site_number
			number_of_sites=$(sed -n '/location ~ \/phpMyAdmin/,/ all;/p' /etc/nginx/sites-enabled/$domain | sed '1d;$d' | sed 's/allow //g' | sed 's/;//g' | wc -l)
			until [[ "$site_number" =~ ^[0-9]+$ && "$site_number" -le "$number_of_sites" ]]
			do
				echo "$site_number: invalid selection."
				read -p "IP address: " whitelistip
			done
			whitelistip=$(sed -n '/location ~ \/phpMyAdmin/,/ all;/p' /etc/nginx/sites-enabled/$domain | sed '1d;$d' | sed 's/allow //g' | sed 's/;//g' | sed -n "$site_number"p)
		done
	elif [ "$g_webserver_type" = "ols" ]  || [ "$g_webserver_type" = "ols-enterprise" ]
	then
		if [[ -z $whitelistip ]]
		then
			echo "Specify the IP address which you wish to add"
			echo "Example: 12.34.56.78"
			read -p "IP address: " whitelistip
		fi
		# We want to remove the line that looks like : RewriteCond %{REMOTE_ADDR} !^12\.34\.56\.78
		ip_rewrite=$(echo ${whitelistip}|sed 's|\.|\\\.|g')
		sed -i '/RewriteCond %{REMOTE_ADDR} !'$(printf %q "$ip_rewrite")'/d' /var/www/$domain/html/.htaccess
	fi

	gf_restart_webserver
	echo
	echo "$whitelistip removed from the phpMyAdmin whitelist for $domain"
	exit
fi


if [[ $action == "print_auth" || $action == "9" ]]
then

	gf_get_dbhost $domain
	gf_get_dbname $domain
	gf_get_dbuser $domain
	gf_get_dbpass $domain
	
	echo
	echo "Login credentials are:"
	echo "Host: $g_mysql_host"
	echo "Database: $g_mysql_name"
	echo "User: $g_mysql_user"
	echo "Password: $g_mysql_pass"
	echo "You can access phpMyAdmin at: $domain/phpMyAdmin"
fi
